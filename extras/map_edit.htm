<!DOCTYPE html>
<meta charset='utf-8'>
<style>
    .block { 
        border:1px solid black;
        width:32px;
        margin: 0;
        padding: 0;
        height:32px;
    }
    #tbl table {
        border-collapse: collapse;
        border-spacing: 0;
    }
</style>
<script>
map = [];
var tilesetid = 0
var palette = document.createDocumentFragment();
function $(x){
    return document.getElementById(x);
}

function hex2(x){
    var w = x.toString(16);
    while (w.length < 2) w = "0" + w;
    return w;
}

function hex4(x){
    var w = x.toString(16);
    while (w.length < 4) w = "0" + w;
    return w;
}

function redraw_blocks(){
    var http = new XMLHttpRequest();
    http.open('HEAD', "tileset"+tilesetid+'/00'+ '.png', false);
    http.send();
if(http.status!=404 && !isNaN(tilesetid)){
    var x = document.querySelectorAll('.block');
    for (var i=0; i<x.length; i++){
        x[i].style.background = "url('tileset"+tilesetid+"/" + x[i].getAttribute('data-bid') + ".png')";
    }
    }
}

function fromasm(){
    var lines = $('asm').value.split("\n");
    var l = 0;
    var totalh = 0;
    for (var i=0; i<lines.length; i++){
        lines[i] = lines[i].replace("    ","");
        if (lines[i].indexOf('db') != 0) continue;
        var l = lines[i].replace("db ","").split(",");
        totalh++;
        $('mapW').value = l.length;
        $('mapH').value = totalh;
        update();
        for (var j=0; j<l.length; j++){
            pick(parseInt(l[j].replace("$",""),16));
            console.log(i);
            chg(j, totalh-1);
        }
    }
}

var picked_block = 0;
var triggered = false;
var border_tile = 0;

function pick(x){
    picked_block = x;
}

function chg(x, y){
    if (true){
        map[y][x] = picked_block;
        update();
        redraw_blocks();
    }
}



function upd(x, y){
    var w = parseInt($('mapW').value);
    var h = parseInt($('mapH').value);
    var status = "block "+x+","+y+" | coord="+(x*2)+","+(y*2);
    var baddr = 0xc6e8 + (w+6) * (3+y) + 3 + x;
    status += ' | block addr cur ' + hex4(baddr) + ', -1: ' + hex4(baddr-(w+6)) + ', -2: ' + hex4(baddr-2*(w+6)) + ', +1: ' + hex4(baddr+(w+6)) + ', +2: ' + hex4(baddr+2*(w+6));
    $('status').innerHTML = status;
}

window.onmousedown = function(e){
    triggered = true;
}
window.onmouseup = function(e){
    triggered = false;
}


function update(){
    tilesetid = parseInt($('mapTiles').value);
    drawPalette(tilesetid);
    var w = parseInt($('mapW').value);
    var h = parseInt($('mapH').value);
    for (var i=0; i<map.length; i++){
        while (map[i].length > w) map[i] = map[i].slice(0, -1);
    }
    while (map.length > h) map = map.slice(0, -1);
    while (map.length < h) map.push([]);
    for (var i=0; i<map.length; i++){
        while (map[i].length < w) map[i].push(0);
    }
    $('tbl').innerHTML = '';
    var html = '<table>';
    var mapID = $('mapID').value;
    var asm = 'SECTION "Map_'+mapID+'", ROM0[$B800]\nMap_'+mapID+'_Header:\n    hdr_tileset         '+tilesetid+'\n    hdr_dimensions      '+w+' ,'+h+'\n    hdr_pointers_a      Map_'+mapID+'_Blocks, Map_'+mapID+'_TextPointers\n    hdr_pointers_b      Map_'+mapID+'_Script, Map_'+mapID+'_Objects\n    hdr_pointers_c      Map_'+mapID+'_InitScript, Map_'+mapID+'_RAMScript\n    hdr_palette         $06\n    hdr_music           MUSIC_CITIES1, AUDIO_1\n    hdr_connection      NORTH, $0000, 0, 0\n    hdr_connection      WEST,  $0000, 0, 0\n    hdr_connection      SOUTH,  $0000, 0, 0\n    hdr_connection      EAST, $0000, 0, 0\nMap_'+mapID+'_Objects:\n    hdr_border          '+ hex2(border_tile) +'\n    hdr_warp_count      0\n    hdr_sign_count      0\n    hdr_object_count    0\n\nMap_'+mapID+'_RAMScript:\n    rs_end\n\ndb ';
    for (var i=0; i<map.length; i++){
        html += "<tr>";
        for (var j=0; j<map[i].length; j++){
            html += '<td class="block" data-bid="' + hex2(map[i][j]) + '" oncontextmenu="pick('+map[i][j]+');return false" onclick="chg('+j+','+i+')" onmousemove="upd('+j+','+i+');if(triggered)chg('+j+','+i+')"></td>';
            asm += '$'+hex2(map[i][j])+',';
        }
        html += "</tr>";
        asm = asm.slice(0, -1) + "\ndb ";
    }
    asm = asm + 'Map_'+mapID+'_TextPointers:\n\nMap_'+mapID+'_InitScript:\n    ret\nMap_'+mapID+'_Script:\n    ret   ';
    $('tbl').innerHTML = html + "</table>";
    $('asm').value = asm.slice(0, -3);
    redraw_blocks();
}

function drawPalette(tilesetid){
document.querySelectorAll("#palette").forEach(function(c){
    c.parentNode.removeChild(c);
});
div = document.createElement('div');
div.setAttribute('id', 'palette');
var http = new XMLHttpRequest();
    http.open('HEAD', "tileset"+tilesetid+'/00'+ '.png', false);
    http.send();
if(http.status!=404 && !isNaN(tilesetid)){
for (var i=0; i<0xff; i++){
img = document.createElement('img');
img.setAttribute('style', 'width:32px;outline:1px solid #666;');
img.setAttribute("src","tileset"+tilesetid+'/' + hex2(i) + '.png');
img.setAttribute("onclick","pick("+i+")");
div.appendChild(img);
}
}else{
txt = document.createElement("span");
txt.setAttribute("id", "err");
txt.setAttribute("style", "color:red");
div.appendChild(txt);
}
list = document.getElementById("centr");
list.insertBefore(div,list.childNodes[27]);
try{
$('err').innerHTML = "UNKNOWN OR INVALID TILESET!"
}catch(e){
}
}
</script>

<center id="centr">

W=<input type='text' id='mapW' style='width:50px' onkeyup='update()'> &nbsp; H=<input type='text' id='mapH' style='width:50px' onkeyup='update()'> Tileset=<input type='text' id='mapTiles' style='width:50px' value="0" onkeyup='update()'> Map ID=<input type='text' id='mapID' style='width:50px' value="0000" onkeyup='update()'>
<br>
<span id='status' style='font-size:10px'></span>
<br><br>
<div id='tbl'></div>

<br><br>Border:
<div class='block' id='bordertile' data-bid='00' onclick='border_tile=picked_block;this.setAttribute("data-bid", hex2(border_tile));update()'></div>

<br><br>


<br><div id=asmInOut>
<textarea style='width:50%;height:100px' id='asm'></textarea><br><input type='button' value='from asm (only block data)' onclick='fromasm()'>
</div>
</center>
<script>
drawPalette(0);
</script>
